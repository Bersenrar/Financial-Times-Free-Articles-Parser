version: '3.8'

services:
  # PostgreSQL Database
  db:
    build:
      context: .
      dockerfile: Dockerfile.db
    container_name: newsdb
    environment:
      POSTGRES_DB: newsdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d newsdb"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Parser Application
  parser:
    build:
      context: .
      dockerfile: Dockerfile.parser
    container_name: news-parser
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: newsdb
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # API Application
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: news-api
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: newsdb
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge 